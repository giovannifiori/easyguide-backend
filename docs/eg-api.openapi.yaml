openapi: 3.0.0
info:
  title: Easy Guide API
  description: The data source for the Easy Guide mobile app.
  version: 0.0.1

servers:
  - url: http://localhost:3001/api
    description: The development server

paths:
  /disabilities:
    get:
      summary: Returns all disability types and subitems
      tags:
        - Disability
      responses:
        "200":
          description: List of Disabilities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Disability"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /places/search:
    get:
      summary: Returns a list of places whose name matches que queried text.
      tags:
        - Place
      parameters:
        - name: query
          in: query
          schema:
            type: string
          required: true
          allowEmptyValue: false
          description: The text that will be searched
        - name: location
          in: query
          schema:
            type: string
          required: false
          allowEmptyValue: false
          description: "The latitude and longitude in the format of: lat,lng"
        - name: radius
          in: query
          schema:
            type: integer
            format: int32
          required: false
          allowEmptyValue: true
          description: The radius distance from the location. If present, places in this radius will have priority.
      responses:
        "200":
          description: List of places
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Place"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /places/nearby:
    get:
      summary: Returns a list of nearby places in a radius of 3.5KM.
      tags:
        - Place
      parameters:
        - name: location
          in: query
          schema:
            type: string
          required: false
          allowEmptyValue: false
          description: "The latitude and longitude in the format of: lat,lng"
      responses:
        "200":
          description: List of places
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Place"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /places/{id}:
    get:
      summary: Returns info of the specified place.
      tags:
        - Place
      parameters:
        - name: id
          in: path
          description: The place id.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Place info.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaceDetails"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /places/photo/{photoreference}:
    get:
      summary: Returns a image of a place using it's photo reference provided by google.
      tags:
        - Place
      parameters:
        - name: photoreference
          in: path
          description: The place's photo reference provided by Google API.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: The place photo.
          content:
            image/*:
              schema:
                type: string
                format: binary
  /places/{id}/reviews:
    post:
      summary: Creates a new place review.
      tags:
        - Place
      parameters:
        - name: id
          in: path
          description: The place id
          required: true
          schema:
            type: string
      requestBody:
        description: Required fields to create and publish a new place review
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                isAccessible:
                  $ref: "#/components/schemas/AccessibilityRank"
                userId:
                  type: string
                highlights:
                  type: array
                  items:
                    type: integer
                    format: int32
                    description: DisabilityItem id
      responses:
        "201":
          description: Review successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    description: The created review's id.
        "400":
          description: Bad request. Parameters are missing.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{id}/reviews:
    get:
      summary: Returns all reviews made by the user
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User's id
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: The number of returning reviews
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: The number of reviews to skip
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A list of reviews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{id}/favorites:
    get:
      summary: Returns user's favorite places
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User's id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A list of places
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Place"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Adds a new favorite place to the user
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User's id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        description: Required fields to save a new place as favorite
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: The place id
                  type: string
      responses:
        "201":
          description: The new favorite record
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  place_id:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        "400":
          description: Bad request. Parameters are missing.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Removes a place from user's favorites
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User's id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        description: Required fields to remove a place from user's favorites
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: The place id
                  type: string
      responses:
        "200":
          description: Describe deletion status
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: boolean
        "400":
          description: Bad request. Parameters are missing or the user does not have this place as favorite.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Error:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
        status:
          type: integer
          format: int32
    Disability:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/DisabilityItem"
    DisabilityItem:
      type: object
      properties:
        id:
          type: integer
          format: int 32
        name:
          type: string
    Place:
      type: object
      properties:
        formatted_address:
          type: string
        geometry:
          type: object
          properties:
            location:
              type: object
              properties:
                lat:
                  type: string
                lng:
                  type: string
        id:
          type: string
        name:
          type: string
        opening_hours:
          type: object
          properties:
            open_now:
              type: boolean
        photos:
          type: array
          items:
            type: object
            properties:
              height:
                type: integer
                format: int32
              html_attributions:
                type: array
                items:
                  type: string
              photo_reference:
                type: string
              width:
                type: integer
                format: int32
        place_id:
          type: string
        rating:
          type: number
          format: float
        types:
          type: array
          items:
            type: string
        totalAccessibilityReviews:
          type: integer
          format: int32
        positiveOpinionsPercentage:
          type: number
          format: float
    PlaceDetails:
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/Review"
        highlights:
          description: Items marked as a highlight to the place.
          type: array
          items:
            type: string
    Review:
      description: A review of a specific place.
      type: object
      properties:
        id:
          type: integer
          format: int32
        user_id:
          type: string
        place_id:
          type: string
        is_accessible:
          $ref: "#/components/schemas/AccessibilityRank"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        highlights:
          description: The points mentioned by the reviewer as highlights for this place
          type: array
          items:
            $ref: "#/components/schemas/DisabilityItem"
    AccessibilityRank:
      type: string
      enum:
        - NO
        - PARTIALLY
        - YES
